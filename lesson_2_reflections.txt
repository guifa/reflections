What happens when you initialize a repository? Why do you need to do it?
	
	-It creates a .git directory. You need to tell that the directory is a repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	-Its different because its right in the middle of them, a place where you can put what you think must be commited.

How can you use the staging area to make sure you have one commit per logical
change?

	-You can check what was modified before you commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	-When I need to make experimental changes. I would make a branch to try my new feature before making any changes to the master branch.

How do the diagrams help you visualize the branch structure?

	-Its easy to see the connections when we make a diagram.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	
	-The two branches will become one and the merging the log in a cronological way. Because its easy to see.

What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?

	-Merging manually can be very hard since you need to track all the commits from both branches.